{"version":3,"sources":["services/got-service.js","components/app/index.js","components/app/app.js","index.js"],"names":["GotService","_apiBase","url","a","fetch","this","res","json","getResource","id","App","useState","list","setList","value","setValue","page","setPage","rowsPerPage","setRowsPerPage","fullName","title","family","imageUrl","char","setChar","gotService","allCharacters","getAllCharacters","handleClickInfo","getCharacter","useEffect","AppBar","position","Tabs","centered","onChange","e","newValue","Tab","label","Box","mx","m","maxWidth","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","slice","map","el","hover","tabIndex","onClick","Avatar","alt","src","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","event","target","Card","className","CardActionArea","CardMedia","height","image","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1707aa24.chunk.js","sourcesContent":["class GotService {\r\n  _apiBase = 'https://thronesapi.com/api/v2/'\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`)\r\n    return await res.json()\r\n  }\r\n\r\n  async getAllCharacters() {\r\n    return this.getResource('Characters')\r\n  }\r\n\r\n  async getCharacter(id) {\r\n    return this.getResource(`Characters/${id}`)\r\n  }\r\n\r\n  async getAllContinents() {\r\n    return this.getResource('Continents')\r\n  }\r\n\r\n  async getContinent(id) {\r\n    return this.getResource(`Continents/${id}`)\r\n  }\r\n}\r\n\r\nexport default GotService\r\n\r\n\r\n","import App from './app'\r\nexport default App","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  TablePagination, Typography, Container, Tabs, Tab,\r\n  AppBar, TableContainer, Table, TableHead, TableRow,\r\n  TableCell, TableBody, Paper, Avatar, Box, Grid,\r\n  Card, CardActionArea, CardMedia, CardContent, CardActions,\r\n  Button\r\n} from '@material-ui/core'\r\nimport GotService from '../../services/got-service'\r\nimport './app.css'\r\n\r\nconst App = () => {\r\n  const [list, setList] = useState([])\r\n  const [value, setValue] = useState(0)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [char, setChar] = useState({\r\n    fullName: 'Harry Potter',\r\n    title: 'Mage',\r\n    family: 'Potter',\r\n    imageUrl: 'https://blog-russia.storytel.com/upload/iblock/594/594fa38b25cfe8b87b8e3af1af08fbeb.jpg'\r\n  })\r\n\r\n  const gotService = new GotService()\r\n  const allCharacters = async () => {\r\n    const res = await gotService.getAllCharacters()\r\n    setList(res)\r\n  }\r\n\r\n  const handleChangeInfo = (e, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const handleChangePage = (e, newPage) => {\r\n    setPage(newPage);\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  const handleClickInfo = async (id) => {\r\n    const res = await gotService.getCharacter(id)\r\n    setChar({\r\n      fullName: res.fullName,\r\n      title: res.title,\r\n      family: res.family,\r\n      imageUrl: res.imageUrl\r\n    })\r\n    setValue(1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    allCharacters()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          centered\r\n          value={value}\r\n          onChange={handleChangeInfo}\r\n        >\r\n          <Tab label=\"Characters\" />\r\n          <Tab label=\"Info\" />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {value === 0\r\n      ?\r\n        <Box mx=\"auto\" m={1} maxWidth={500}>\r\n          <Paper>\r\n            <TableContainer>\r\n              <Table stickyHeader>\r\n\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Full name</TableCell>\r\n                    <TableCell>Photo</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {list\r\n                  ? list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(el => (\r\n                    <TableRow hover tabIndex={-1} key={el.id} onClick={() => handleClickInfo(el.id)}>\r\n                      <TableCell>{el.id}</TableCell>\r\n                      <TableCell>{el.fullName}</TableCell>\r\n                      <TableCell>\r\n                        <Avatar alt={el.fullName} src={el.imageUrl} />\r\n                      </TableCell>\r\n                    </TableRow>))\r\n                  : null}\r\n                </TableBody>\r\n\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={list.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </Box>\r\n      :\r\n        <Card className=\"cardInfo\">\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Contemplative Reptile\"\r\n              height=\"400\"\r\n              image={char.imageUrl}\r\n              title={char.fullName}\r\n            />\r\n            <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {char.fullName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Title: {char.title}, family: {char.family}\r\n            </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button size=\"small\" color=\"primary\">\r\n              Share\r\n            </Button>\r\n            <Button size=\"small\" color=\"primary\">\r\n              Learn More\r\n            </Button>\r\n          </CardActions>\r\n        </Card>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}